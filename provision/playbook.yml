---
- hosts: all
  tasks:
    - include_vars:
        file: users.yml
        name: users

    - name: set saner SSH configuration security defaults
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - regexp: "^PasswordAuthentication"
          line: "PasswordAuthentication no"
        - regexp: "^PermitRootLogin"
          line: "PermitRootLogin no"
        - regexp: "^PermitEmptyPasswords"
          line: "PermitEmptyPasswords no"
        - regexp: "^X11Forwarding"
          line: "X11Forwarding no"
        #- regexp: "^Port"
        #  line: "Port {{ security_ssh_port }}"
        - regexp: "^UseDNS"
          line: "UseDNS no"
        - regexp: "^ChallengeResponseAuthentication"
          line: "ChallengeResponseAuthentication no"
        - regexp: "^GSSAPIAuthentication"
          line: "GSSAPIAuthentication no"
      notify: restart ssh
      become: yes

    - name: install Docker
      include_role:
        name: geerlingguy.docker
        apply:
          become:
            yes
      vars:
        docker_users: "{{ users | dict2items | map(attribute='key') | list }}"
        docker_package_state: latest

    - name: install python pip
      package: name=python-pip state=latest
      become: yes

    - name: install python setuptools
      pip:
        name:
          - setuptools
        state: latest
      become: yes

    - name: install docker-py
      pip:
        name:
          - docker
        state: latest
      become: yes

      #docker exec --user node -it thelounge thelounge add [username]

    - name: install Nomad
      include_role:
        name: allgreed.nomad
        apply:
          become:
            yes

    - name: create application data directory
      file:
        state: directory
        path: /var/eph/
      become: yes

    - name: copy application configs
      copy:
        src: configs/
        dest: /etc/svc/
      become: yes

  handlers:
    - name: restart ssh
      service: name=ssh state=reloaded
      become: yes

